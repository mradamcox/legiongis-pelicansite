<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Legion GIS, LLC</title><link href="http://legiongis.com/" rel="alternate"></link><link href="http://legiongis.com/feeds/web-maps.atom.xml" rel="self"></link><id>http://legiongis.com/</id><updated>2016-10-26T00:00:00-05:00</updated><entry><title>Embedding Web Maps In These Blog Posts</title><link href="http://legiongis.com/embedding-web-maps-in-these-blog-posts.html" rel="alternate"></link><updated>2016-10-26T00:00:00-05:00</updated><author><name>Adam Cox</name></author><id>tag:legiongis.com,2016-10-26:embedding-web-maps-in-these-blog-posts.html</id><summary type="html">&lt;p&gt;One thing I've been polishing up is a method for including a stock web map within the body of one of these blog posts. This would allow for a quick and easy way to share some news about current projects, along with the map layers that we're using or producing. I'd begun working on this a while ago, and have figured out a method that is 90% satisfactory.&lt;/p&gt;
&lt;p&gt;This site is generated by Pelican, which means that an article (blog post) like this one is written in markdown and then passed through an html Jinja template, "article.html", which formats it and results in a static "embedding-web-maps-in-these-blog-posts.html" file. In a few cases I had made standalone web maps in new individual templates "map-article1.html", "map-article2.html", etc. However, these new templates would necessarily be exact copies of "article.html", plus a few added lines of html to make the map at the bottom. This kind of replication doesn't feel good.&lt;/p&gt;
&lt;p&gt;One challenging thing about making a one-size-fits-all web map template is that even though the design can maintain a uniform look, labeling the buttons, info boxes, and configuring the layers themselves requires a considerable amount of modification from one map to the next. This means that a stock "map-article.html" template--to which a list of layers, layer information, button names, etc. could be passed--is out of the question, at least for now.&lt;/p&gt;
&lt;p&gt;What I've ended up doing instead is a combination of standalone web map templates and the original "article.html" template. I created a new folder, "templates/maps", into which I've placed the html for each map. Then, I add that html file's name to the article's metadata. Finally, that html is incorporated into the "article.html" after the article's content is displayed with this statement:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;{{&lt;/span&gt; &lt;span class="nv"&gt;article.content&lt;/span&gt; &lt;span class="cp"&gt;}}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="nv"&gt;article.maphtml&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="x"&gt;    &lt;/span&gt;&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;include&lt;/span&gt; &lt;span class="nv"&gt;article.maphtml&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;span class="cp"&gt;{%&lt;/span&gt; &lt;span class="k"&gt;endif&lt;/span&gt; &lt;span class="cp"&gt;%}&lt;/span&gt;&lt;span class="x"&gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;Including nice-looking maps at the bottom of blog posts is now pretty easy. I just have to go into the maps/templates folder, copy and paste an existing template, and add/remove buttons, layers, etc. This allows for a lot of flexibility with a relatively small amount of effort. The final touch is to copy these map templates staight to the website output, so the maps can be viewed on their own individual pages.&lt;/p&gt;
&lt;p&gt;A note about the design itself: This web map format is just an adaptation of my very first foray into using Open Layers 3 and GeoServer. I have made some basic updates to make the maps (a little) more mobile friendly and to use this website's css, and rewritten the html to use bootstrap. Otherwise, as you can see, it's very simple.&lt;/p&gt;
&lt;p&gt;Interested in more? Check out all of our &lt;a href="tag/web-maps.html"&gt;other posts that have web maps&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For more info on the example below, check out &lt;a href="using-historic-maps-of-the-armed-forces-retirement-home.html"&gt;this post&lt;/a&gt;.&lt;/p&gt;</summary><category term="web maps"></category><category term="pelican"></category><category term="jinja2"></category></entry><entry><title>Using Historic Maps of the Armed Forces Retirement Home</title><link href="http://legiongis.com/using-historic-maps-of-the-armed-forces-retirement-home.html" rel="alternate"></link><updated>2016-08-04T00:00:00-05:00</updated><author><name>Adam Cox</name></author><id>tag:legiongis.com,2016-08-04:using-historic-maps-of-the-armed-forces-retirement-home.html</id><summary type="html">&lt;p&gt;One aspect of developing an Arches app is the configuration of the database's map view, one component of which is figuring out what layers to use. Which basemaps? Where will the aerial imagery come from? Can historic maps be included as overlays? To test all these things out, I generally make a light-weight webmap that can serve as a testing ground. Below is the result of the development of the AFRH Arches app.&lt;/p&gt;
&lt;p&gt;Generally, there are suitable basemap layers out there somewhere. In this case, we used open street map's default tile rendering for the street map, and a 2013 aerial photograph tileset published by DCGIS for the imagery. (In an earlier iteration, we used MapQuest tiles which was great because they had a separate "labels" layer that we grouped with the imagery to make a very nice-looking hybrid layer. Then MapQuest discontinued their tile service. Bummer.)&lt;/p&gt;
&lt;p&gt;The more interesting part of the process is always the creation of the historic map layers. Legion GIS was provided with 12 high resolution scans of these maps, ranging in date from 1850 to 1975, and then the fun begins. Full details on our favorite image processing techniques are for another post, but through some GIMP processing, ArcGIS/QGIS georeferencing, and GDAL resampling we are able to create nice, as-light-weight-as-possible GeoTiffs. These are published as Web Map Services through GeoServer, and the result is shown below.&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;</summary><category term="preservation"></category><category term="Arches"></category><category term="web maps"></category><category term="historic maps"></category></entry></feed>